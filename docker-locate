#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Locate docker container ID based on its name or another identifier.
Usage: "$(basename "$1")" [-e|--error] [-a|--all] [-l|--latest] [-n=-1] CONTAINER_NAME [-?|-h|--help]
HELPTEXT
}

isError=
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--error|-e)	shift; isError=t;;
	*)		break;;
    esac
done
lastArg=${!#}

IFS=$'\n'
typeset -a id=($(docker ps -q "${@:1:$(($#-1))}" --filter "id=$lastArg"))
[ ${#id[@]} -eq 0 ] && id=($(docker ps -q "${@:1:$(($#-1))}" --filter "name=$lastArg"))
[ ${#id[@]} -eq 0 ] && id=($(docker ps -q "${@:1:$(($#-1))}" --filter "ancestor=$lastArg"))
if [ ${#id[@]} -eq 0 ]; then
    if [ "$isError" ]; then
	exit 1
    else
	echo >&2 "Warning: Could not locate $lastArg"
	id=("$lastArg")
    fi
elif [ ${#id[@]} -gt 1 ]; then
    set -x
    # Try to find exact match with image name.
    typeset -a fullMatches=()
    typeset -a nameVersionMatches=()
    typeset -a packageNameMatches=()
    typeset -a nameMatches=()
    for i in "${id[@]}"
    do
	imageFull="$(docker inspect --format '{{.Config.Image}}' "$i")"
	nameVersion=${imageFull##*/}
	packageName=${imageFull%:*}
	name=${nameVersion%:*}

	[ "$lastArg" = "$imageFull" ] && fullMatches+=$i
	[ "$lastArg" = "$nameVersion" ] && nameVersionMatches+=$i
	[ "$lastArg" = "$packageName" ] && packageNameMatches+=$i
	[ "$lastArg" = "$name" ] && nameMatches+=$i
    done

    if [ ${#fullMatches[@]} -eq 1 ]; then
	id=("${fullMatches[0]}")
    elif [ ${#nameVersionMatches[@]} -eq 1 ]; then
	id=("${nameVersionMatches[0]}")
    elif [ ${#packageNameMatches[@]} -eq 1 ]; then
	id=("${packageNameMatches[0]}")
    elif [ ${#nameMatches[@]} -eq 1 ]; then
	id=("${nameMatches[0]}")
    fi
fi

printf '%s\n' "${id[@]}"
